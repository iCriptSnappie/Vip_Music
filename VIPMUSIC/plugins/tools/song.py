import os
import future
import asyncio
import requests
import wget
import time
import yt_dlp
from urllib.parse import urlparse
from youtube_search import YoutubeSearch
from yt_dlp import YoutubeDL

from instascrape import Post
from instascrape import Profile
from VIPMUSIC import app
from pyrogram import filters
from pyrogram import Client, filters
from pyrogram.types import Message
from youtubesearchpython import VideosSearch
from youtubesearchpython import SearchVideos

#-------------------


# ------------------------------------------------------------------------------- #

@app.on_message(filters.command("song"))
def download_song(_, message):
    query = " ".join(message.command[1:])  
    print(query)
    m = message.reply("**üîÑ s·¥á·¥Ä Ä·¥Ñ ú…™…¥…¢... **")
    ydl_ops = {"format": "bestaudio[ext=m4a]"}
    try:
        results = YoutubeSearch(query, max_results=1).to_dict()
        link = f"https://youtube.com{results[0]['url_suffix']}"
        title = results[0]["title"][:40]
        thumbnail = results[0]["thumbnails"][0]
        thumb_name = f"{title}.jpg"
        thumb = requests.get(thumbnail, allow_redirects=True)
        open(thumb_name, "wb").write(thumb.content)
        duration = results[0]["duration"]

        # Add these lines to define views and channel_name
        views = results[0]["views"]
        channel_name = results[0]["channel"]

    except Exception as e:
        m.edit("**‚ö†Ô∏è …¥·¥è  Ä·¥ás·¥ú ü·¥õs ·¥°·¥á Ä·¥á “ì·¥è·¥ú…¥·¥Ö. ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á  è·¥è·¥ú ·¥õ è·¥ò·¥á·¥Ö ·¥õ ú·¥á ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ s·¥è…¥…¢ …¥·¥Ä·¥ç·¥á**")
        print(str(e))
        return
    m.edit("**üì• ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö…™…¥…¢...**")
    try:
        with yt_dlp.YoutubeDL(ydl_ops) as ydl:
            info_dict = ydl.extract_info(link, download=False)
            audio_file = ydl.prepare_filename(info_dict)
            ydl.process_info(info_dict)
        secmul, dur, dur_arr = 1, 0, duration.split(":")
        for i in range(len(dur_arr) - 1, -1, -1):
            dur += int(float(dur_arr[i])) * secmul
            secmul *= 60
        m.edit("**üì§ ·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢...**")

        message.reply_audio(
            audio_file,
            thumb=thumb_name,
            title=title,
            caption=f"{title}\nR·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö  ô è ‚û™{message.from_user.mention}\nV…™·¥á·¥°s‚û™ {views}\nC ú·¥Ä…¥…¥·¥á ü‚û™ {channel_name}",
            duration=dur
        )
        m.delete()
    except Exception as e:
        m.edit(" - An error !!")
        print(e)

    try:
        os.remove(audio_file)
        os.remove(thumb_name)
    except Exception as e:
        print(e)
        
        

# ------------------------------------------------------------------------------- #

###### INSTAGRAM REELS DOWNLOAD


@app.on_message(filters.command(["ig"], ["/", "!", "."]))
async def download_instareels(c: app, m: Message):
    try:
        reel_ = m.command[1]
    except IndexError:
        await m.reply_text("…¢…™·¥†·¥á ·¥ç·¥á ·¥Ä  ü…™…¥·¥ã ·¥õ·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö …™·¥õ...")
        return
    if not reel_.startswith("https://www.instagram.com/reel/"):
        await m.reply_text("I…¥ ·¥è Ä·¥Ö·¥á Ä ·¥õ·¥è ·¥è ô·¥õ·¥Ä…™…¥ ·¥õ ú·¥á  Ä·¥á«´·¥ú·¥ás·¥õ·¥á·¥Ö  Ä·¥á·¥á ü, ·¥Ä ·¥†·¥Ä ü…™·¥Ö  ü…™…¥·¥ã …™s …¥·¥á·¥Ñ·¥áss·¥Ä Ä è. K…™…¥·¥Ö ü è ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ç·¥á ·¥°…™·¥õ ú ·¥õ ú·¥á  Ä·¥á«´·¥ú…™ Ä·¥á·¥Ö  ü…™…¥·¥ã.")
        return
    OwO = reel_.split(".",1)
    Reel_ = ".dd".join(OwO)
    try:
        await m.reply_video(Reel_)
        return
    except Exception:
        try:
            await m.reply_photo(Reel_)
            return
        except Exception:
            try:
                await m.reply_document(Reel_)
                return
            except Exception:
                await m.reply_text("I ·¥Ä·¥ç ·¥ú…¥·¥Ä ô ü·¥á ·¥õ·¥è  Ä·¥á·¥Ä·¥Ñ ú ·¥õ·¥è ·¥õ ú…™s  Ä·¥á·¥á ü.")



######

@app.on_message(filters.command(["reel"], ["/", "!", "."]))
async def instagram_reel(client, message):
    if len(message.command) == 2:
        url = message.command[1]
        response = requests.post(f"https://lexica-api.vercel.app/download/instagram?url={url}")
        data = response.json()

        if data['code'] == 2:
            media_urls = data['content']['mediaUrls']
            if media_urls:
                video_url = media_urls[0]['url']
                await message.reply_video(f"{video_url}")
            else:
                await message.reply("N·¥è ·¥†…™·¥Ö·¥á·¥è “ì·¥è·¥ú…¥·¥Ö …™…¥ ·¥õ ú·¥á  Ä·¥ás·¥ò·¥è…¥s·¥á. M·¥Ä è ô·¥á ·¥Ä·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ …™s ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á.")
        else:
            await message.reply("R·¥á«´·¥ú·¥ás·¥õ ·¥°·¥Äs …¥·¥è·¥õ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü.")
    else:
        await message.reply("P ü·¥á·¥Äs·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥†·¥Ä ü…™·¥Ö I…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç URL ·¥ús…™…¥…¢ ·¥õ ú·¥á /reels ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö.")

